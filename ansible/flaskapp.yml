---
- name: Deploy Flask Application
  hosts: flask_servers
  become: yes
  gather_facts: no
  
  vars:
    ansible_python_interpreter: /usr/bin/python3
    app_version: "{{ app_version }}"
    s3_bucket: "{{ s3_bucket }}"
    s3_key: "{{ s3_key }}"
    app_path: "{{ app_path }}"
    temp_download_path: "/tmp/flask_app.tar.gz"

  tasks:
    - name: Install required Python packages
      ansible.builtin.pip:
        name:
          - boto3
          - botocore
        state: present

    - name: Download from S3 using boto
      block:
        - name: Attempt S3 download
          ansible.builtin.aws_s3:
            bucket: "{{ s3_bucket }}"
            object: "{{ s3_key }}"
            dest: "{{ temp_download_path }}"
            mode: get
          register: download_result
          retries: 3
          ignore_errors: yes

        - name: Fail if download unsuccessful
          ansible.builtin.fail:
            msg: "Failed to download from S3 after multiple attempts"
          when: download_result is failed

    - name: Extract application
      ansible.builtin.unarchive:
        src: "{{ temp_download_path }}"
        dest: "{{ app_path }}"
        remote_src: yes
        creates: "{{ app_path }}/app.py"

    - name: Cleanup temp file
      ansible.builtin.file:
        path: "{{ temp_download_path }}"
        state: absent

  roles:
    - role: python_flask
    - role: configure_app

- name: Setup Database Server
  hosts: dbserver
  roles:
    - postgresql